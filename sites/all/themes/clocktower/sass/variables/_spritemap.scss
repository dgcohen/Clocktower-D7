/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: map-get($icon-home, 'width');
}

At the bottom of this section, we provide information about the spritesheet itself
*/
$hamburger-closed: (
  name: 'hamburger-closed',
  x: 150px,
  y: 0px,
  offset-x: -150px,
  offset-y: 0px,
  width: 128px,
  height: 128px,
  total-width: 606px,
  total-height: 192px,
  image: '/sites/all/themes/custom/clocktower/images/generated/sprite-406386f29e4b58196c076aff8e03bc70.png'
);
$hamburger-open: (
  name: 'hamburger-open',
  x: 298px,
  y: 0px,
  offset-x: -298px,
  offset-y: 0px,
  width: 128px,
  height: 128px,
  total-width: 606px,
  total-height: 192px,
  image: '/sites/all/themes/custom/clocktower/images/generated/sprite-406386f29e4b58196c076aff8e03bc70.png'
);
$icon-facebook: (
  name: 'icon-facebook',
  x: 0px,
  y: 0px,
  offset-x: 0px,
  offset-y: 0px,
  width: 50px,
  height: 50px,
  total-width: 606px,
  total-height: 192px,
  image: '/sites/all/themes/custom/clocktower/images/generated/sprite-406386f29e4b58196c076aff8e03bc70.png'
);
$icon-twitter: (
  name: 'icon-twitter',
  x: 70px,
  y: 0px,
  offset-x: -70px,
  offset-y: 0px,
  width: 60px,
  height: 49px,
  total-width: 606px,
  total-height: 192px,
  image: '/sites/all/themes/custom/clocktower/images/generated/sprite-406386f29e4b58196c076aff8e03bc70.png'
);
$triangle-white: (
  name: 'triangle-white',
  x: 446px,
  y: 0px,
  offset-x: -446px,
  offset-y: 0px,
  width: 160px,
  height: 192px,
  total-width: 606px,
  total-height: 192px,
  image: '/sites/all/themes/custom/clocktower/images/generated/sprite-406386f29e4b58196c076aff8e03bc70.png'
);
$spritesheet: (
  width: 606px,
  height: 192px,
  image: '/sites/all/themes/custom/clocktower/images/generated/sprite-406386f29e4b58196c076aff8e03bc70.png',
  sprites: ($hamburger-closed, $hamburger-open, $icon-facebook, $icon-twitter, $triangle-white, )
);

/*
The provided mixins are intended to be used with variables directly

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: map-get($sprite, 'width');
}

@mixin sprite-height($sprite) {
  height: map-get($sprite, 'height');
}

@mixin sprite-position($sprite) {
  background-position: map-get($sprite, 'offset-x') map-get($sprite, 'offset-y');
}

@mixin sprite-image($sprite) {
  background-image: url(map-get($sprite, 'image'));
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites(map-get($spritesheet, 'sprites'));
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: map-get($sprite, 'name');
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
