<?php
  function clocktower_player_menu() {
    $items['player/%/%'] = array(
      'title' => 'Clocktower Player',
      'description' => 'Clocktower jPlayer',
      'page callback' => 'clocktower_player_page',
      'page arguments' => array(1, 2),
      'type' => MENU_CALLBACK,
      'access arguments' => array('access content'),
    );
    return $items;
  }

  function clocktower_player_theme($existing, $type, $theme, $path) {
    return array(
      'clocktower_player' => array(
        'template' => 'templates/clocktower-player-page',
      ),
    );
  }

  function clocktower_player_page($station_id, $show_id = 0) {
    $station = node_load($station_id);
    $show = node_load($show_id);

    if($station->type == "channel") {
      $show_data = get_channel_info($station, $show);
    } elseif ($station->type == "series") {
      $show_data = get_archive_info($station, $show);
    }
    drupal_add_js(drupal_get_path('module', 'clocktower_player') . '/js/clocktower-player.js');
    $settings = array('clocktowerplayer' => array('file_path' => $show_data['file_path']));
    drupal_add_js($settings, 'setting');
    drupal_add_js('sites/all/libraries/jplayer/jquery.jplayer.min.js');
    drupal_add_css(drupal_get_path('module', 'clocktower_player') . '/css/jplayer.blue.monday.css');
    $series_title = array_key_exists('series_title', $show_data) ? $show_data['series_title'] : '';
    $channel_title = array_key_exists('channel_title', $show_data) ? $show_data['channel_title'] : '';

    // Get channel list.
    $nids = db_select('node', 'n')
        ->fields('n', array('nid'))
        ->fields('n', array('type'))
        ->condition('n.type', 'channel')
        ->execute()
        ->fetchCol(); // returns an indexed array

    // Now return the node objects.
    $channels = node_load_multiple($nids);

    $page_elements = array(
      'title' => $show_data['title'],
      'series' => $series_title,
      'channel' => $channel_title,
      'station_id' => $station_id,
      'previous_show_id' => $show_data['previous_show_id'],
      'next_show_id' => $show_data['next_show_id'],
      'background_image_src' => $show_data['background_image_src'],
      'channel_list' => $channels,
    );
    return theme('clocktower_player', $page_elements);
  }

  function get_channel_info($channel, $show) {
    $show_data = array();

    if (!$show) {
      $show = latest_show($channel);
    }

    $series = series($show);

    $show_data['title'] = $show->title;
    $show_data['channel_title'] = $channel->title;
    $show_data['series_title'] = $series->title;
    $show_data['file_path'] = get_file_path($show);
    $show_data['previous_show_id'] = adjacent_shows($show, 'channel')[0];
    $show_data['next_show_id'] = adjacent_shows($show, 'channel')[1];
    $image_display = field_info_instance('node', 'field_image', 'show')['display'];
    $image_style = $image_display['teaser']['settings']['image_style'];
    $image_path = $image_path = $show->field_image['und'][0]['uri'];
    $show_data['background_image_src'] = image_style_url($image_style, $image_path);

    return $show_data;
  }

  function get_archive_info($series, $show) {
    $show_data = array();

    if (!$show) {
      $show = latest_show($series);
    }

    $file = $show->field_audio_path['und'][0]['value'];
    $path = 'sites/default/files/audio/' . $file;
    $realfile = file_uri_to_object($path);
    $data = getid3_analyze_file($realfile);

    $show_data['title'] = $show->title;
    $show_data['series_title'] = $series->title;
    $show_data['file_path'] = get_file_path($show);
    $show_data['previous_show_id'] = adjacent_shows($show, 'series')[0];
    $show_data['next_show_id'] = adjacent_shows($show, 'series')[1];
    $image_display = field_info_instance('node', 'field_image', 'show')['display'];
    $image_style = $image_display['teaser']['settings']['image_style'];
    if (!empty($show->field_image)) {
      $image_path = $show->field_image[LANGUAGE_NONE][0]['uri'];
      $show_data['background_image_src'] = image_style_url($image_style, $image_path);
    } else {
      $show_data['background_image_src'] = '';
    }

    return $show_data;
  }

  function adjacent_shows($show, $mode) {
    if ($mode == 'series') {
      $series = series($show);
      $shows = included_shows($series);
    } else if ($mode == 'channel') {
      $channel = channel($show);
      $shows = included_shows($channel);
    }
    if(count($shows) > 1) {
      $is_first_show = FALSE;
      $is_last_show = FALSE;

      foreach($shows as $index=>$show_id) {
        if ($show_id['nid'] == $show->nid && $index == 0) {
          $show_index = 0;
          $is_first_show = TRUE;
          break;
        } elseif ($show_id['nid'] == $show->nid && $index == (count($shows) - 1)){
          $show_index = $index;
          $is_last_show = TRUE;
          break;
        } elseif ($show_id['nid'] == $show->nid) {
          $show_index = $index;
          break;
        }
      }
      if($is_first_show) {
        $next_show_id = $shows[$show_index + 1]['nid'];
        $previous_show_id = 0;
      } elseif ($is_last_show) {
        $next_show_id = 0;
        $previous_show_id = $shows[$show_index - 1]['nid'];
      } else {
        $next_show_id = $shows[$show_index + 1]['nid'];
        $previous_show_id = $shows[$show_index - 1]['nid'];
      }
      return array($previous_show_id, $next_show_id);
    } else {
      return array();
    }
  }

  function latest_show($category) {
    $latest_show = node_load(included_shows($category)[0]['nid']);
    return $latest_show;
  }

  function included_shows($category) {
    $shows = $category->field_included_shows['und'];
    // Sort show ids from newest to oldest
    usort($shows, 'sortByNid');
    return $shows;
  }

  function series($show) {
    return node_load($show->field_series['und'][0]['nid']);
  }

  function channel($show) {
    return node_load($show->field_channel['und'][0]['nid']);
  }

  function get_file_path($node) {
    $file_name = $node->field_audio_path['und'][0]['value'];
    $path = '/' . variable_get('file_public_path', conf_path() . '/files') . '/audio/mp3/' . $file_name;
    return $path;
  }

  function sortByNid($a, $b) {
      return $b['nid'] - $a['nid'];
  }
?>
